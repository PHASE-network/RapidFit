// $Id: release.notes,v 1.37 2009/11/19 12:53:51 cofitzpa Exp $

2011/04/06 Greig Cowan
  - Added GoodnessOfFit namespace. This implements two methods which are
    summarised in this paper: arXiv:1006.3019v2 [hep-ex]

    1. Point to point dissimalarity method (section 3.3)
    2. Distance to nearest neighbour method (section 3.4)

    The second method is not as powerful as the first, but provides a nice
    way to present the agreement (or not) between a PDF and data in a 
    multidimensional problem.
 
    There is no guarantee that this code is free from bugs!

  - Added PDF for exponential.

2011/03/25 Rob Currie
   - Updated FC plotting tool

2011/03/24 Rob Currie
   - Added warning to fcscanresults_2 for incorrect global minima
   - Re-Added AbsCV plotting to fcplotter v2
   - Made RapidFit compile with ROOT 5.26 as a library (i.e. removal of all short's in headers)
   - Added Free version of XML in config dir

2011/03/23 Rob Currie
   - Re-Written Makefile to use better linking between files
   - Changed Fitting Strategy to that used by Heidelberg

2011/03/22 Rob Currie
   - Added the ability to built a CINT  library version of RapidFit with the goal of torturing Tier2
   - Added Pete's new implementation of mistag parameter handling

2011/03/21 Rob Currie
   - Added Simplex to Minimisation Stratagy
   - Added small amount of code relating to building RapidFit for use in CINT

2011/03/16 Rob Currie
   - A new framework allows for the pdfs to chache information about the address of objects within MemoryDataSets.
     Profiling revealed this to be an issue and the (very wasteful) sub-routine to find the address of objects was called in excess of 1E10 times during FC scans with only 2 datasets
     This is not overly apparent when running on one machine with one fit but for something such as FC we need to be able to scale better
          The result of optimisations so far stand between 30-40% speed improvements on single fits and due to the nature of the fit, teh effect of these improvements should scale strongly with total event number
   - This requires some relativley cosmetic changes for a pdf to make use of this new framework, the old interfaces are still in place and work, however they aren't very efficient

2011/03/15 Rob Currie
   - 'Optimised' a LOT of Mathematics to remove un-needed repeat calculations and similarly with the BaseClass pdf, this should improve fitting as these functions were called O(100k) during my profile run of RapidFit
   - Added Controlled output from scans to give some level of debugging ability
   - Reverted to old FC plotting code, although new implementation is on it's way (...slowly) to provide more plots per fit output
   - Trying to help the compiler be slightly more intelligent by moving common return functions to be inline
   - Applied some quick fixes to try and reduce overheads in commonly used functions (things such as removing constructors from within for loops)
     Overall fit improvements seem to range between 25-33% from some quick and dirty tests
   - Corrected the PhaseSpace problem with sWeighted scans and FC

2011/03/13 Rob Currie
   - Significantly Reduced Output from Scans, work still required to have this controled from XML or runtime but this is a finishing touch
   - Moved a substancial amount of code to pre-incremental changes rather than post-incrementing variables as this is quicker and a relativley minor alteration
       Mostly this should have been caught by all decent compilers, however should it not be this can fix performance issues with some implementations of using per-event tags
   - Removed plotting tool for llscan results from default make as more recent plots all have results produced that are compliant with the fc plotting tool
   - Added the ability to plot 100% Contour using fcscan plotter
   - Changed ResultFormatter to output something which requires substantially less editing to be place in 'official' latex documents, also added a non-latex table to make reviewing output easier

2011/03/11 Rob Currie
   - Added preliminary sWeights code into FCscan
   - Added new compililation options after proving it doesn't effect fit results
   - Fixed my modifications to Conor's FC plotting tool
   - Reduced output for Scans, would be nice to improve this somewhat

2011/03/10 Rob Currie
   - Moved FCscan into FitAssembler and cleaned up some more code, employed file compression on all data given FCscans will produce the results from several hundred toys and hadd doesn't compress
   - Offered slightly more control over FC code now it is a function call, produced framework for assembling different schemes for defining NuisenceParameters, implement ShakeBottle, and use that :D
   - Changed Root I/O method employed in Conor's RapidFit FC scan plotting tool, it should be a lot faster for situations where ttree entries exceeds 50k rows

2011/03/06 Conor
   - I've written the feldman cousins ordering/plotting macro. This accepts a merged ntuple in the format as output by Rob
   - It doesn't need fixed numbers of toys per grid, and makes no implicit assumptions about ordering of the ntuple other than that the first entry is the global minimum
   - Currently this uses the CDF/Heidelberg ordering method which may or may not be wrong. It produces results for comparison with heidelberg but makes no claims that they (and by extension we) have it right.
   - I've also added a ganga script that allows you to split feldman-cousins jobs down into pxqxr subjobs, where p is the number of x axis gridpoints, q the y-axis gridpoints and r the number of subjobs to split toy generation into. This is, as Pete says "Embarrassingly parallel". 

2011/03/06 Rob Currie
   - RapidFit now only returns 1 warning (duplicated) when compiled with -pedantic I cannot resolve this warning and so I make an offer of a beer to whoever can fix it properly
     (beware it's not as easy as you will first think root expects a 2D array allocated as double var[i][j]    NOT    double** var = new double[i] ; for a<i var[a] = new double[i])

2011/03/06 Rob Currie
   - Fixed A Lot of remaining compile-time warnings in RapidFit, moved Root from a local header to a System Header in Makefile and CMakeLists.txt so we can build against root with -Wall -Wextra without the complaints
   - Changed a few defaults in FCcode and removed a LOT of redudant 'commented-out' code
   - Turned off LL2DScan output when running FCscans

2011/03/04 Rob Currie
   - Re-Written a LOT of the FC code and it is now very accessible from the command line
   - Some minor bugfixes

2011/03/02 Pete Clarke
   - Added second long lived background PDF   Bs2JpsiPhiLongLivedBkg_II

2011/03/02 Rob Currie
   - Added control to Minuit Output level to program, although it appears to be on minimal already as default...
   - Changed Bs2JpsiPhi_SignalAlt_MP_v1.cpp to throw not exit on nan
   - Added the ability to force a toy study to request N many good toy fits, this could allow for the output to be filtered to remove all non-crashing fits
   - Added 'verbose' output to FC scans

2011/03/01 Rob Currie
   - Added initial implementation of the framework that will construct FeldmanCousins Plots in a distributed way
     This has hardcoded 1k subjobs with 1k events at each scan point. This is likely to Change
   - The Output Format for FeldmanCousins scans in "FCOutput.root" has been established as:
		GlobalFitResult
		ScanPointFitResult
		TOY1
		TOY2
		...
		TOYN
		GlobalFitResult
		ScanPoint2FitResult
		...
   - Fixed duplication bug which may/maynot have been in head for 2DScan, too many changes in this update to track down exact cause
   - Added command line interface for controlling 2DScan functionality, this will be used eventually on ECDF to remove the need for the generation/use of several hundred XML per plot
     Work is ongoing to produce a bash script that will generate a ganga script to bunch and throw jobs to the grid, remember that ganga has a subjob limit of 1k events so bunching jobs has this to take into account
   - Fixed *all* complier build warnings in framework. Most were harmless integer comparissons but some did alert me to potential conditions which could have theoretically thrown fatal crashes
     I recomend EVERYONE update because of this, it makes crashes so much nicer to debug :D (NEVER thought I would say something nice about Root, but give it overly standards compliant code and it's crashes are fairly helpful)
   - Added DoSafeFit as a method to FitAssembler which allowed me to move the toy studies over to this new safer way of fitting for use in a distributed manner by changing DoFit to DoSafeFit.
     This will benifit all users performing toy studies on smaller datasets where there is a larger risk of the fit collapsing. 
   - Cleaned up the code in ToyStudyResults, considering moving the property of the length of time of the fit to the FitResult class to clean-up this class into a true FitResultVector which would be easier to maintain & use

2011/02/28 Conor
   - Took it upon myself to do some turd-polishing. As a result of either a more strict compiler or a newer root version, 
     I was seeing a lot of warnings at compile time that weren't there before but were not recently introduced bugs. 
     These were mostly due to doubles being cast as ints in places where they really shouldn't be. I've fixed these now. 
   - Added two new programs, designed to handle rapidfit flat ntuple results as produced when submitting to batch systems
   - These are rapidfit_toyresults and rapidfit_llscans. The first handles the making of pullplots and latex tables, the second handles 2D likelihood scans 
   - The code is beta, particularly for the llscans, but tests so far show it to work
   - running make will compile these along with the main rapidfit executable. Alternatively run "make utils" to just compile these independently
   - To find out how to use them, just run them without arguments

2011/02/28 Rob Currie
   - Fixed a problem with the logic in LLcontour for 1x1 scans... I still maintain this is a 'special' use case
   - Fixed the script that generates the jobs on ECDF. The code works and generates what the user asks for, however I maintain this algorithm is not as simple as you first think,
	eventually I will translate this into a python job template for ganga, however as it 'just works' to a sufficient degree I commit a working example

2011/02/24 Rob Currie
   - Fixed the Blinding in the new 2DScan code, Now able to reproduce plots Pete generates with the old scanning code in a fraction of the time on ECDF correctly, the new scanning code should 'Just Work'(tm) for everyone
   - Added short howto-use and bash script for breaking up a 2DScan plot to generate quick plots using as many cores as possible on ECDF

2011/02/24 Rob Currie
   - Changed the way that FitAssembler deals with Throws, will now attempt a basic recovery of the coordinates of the point based on shifting the fixed value slightly either way of where a fit falls over
   - Changed the code I put in ToyStudyResults to return All Fit Status which is more helpful
   - Added the few lines to print the result of the last LLscan or LLcontour to a .root file, will make this more elegant very soon, but for now if you want all of this info, do one fit at a time

2011/02/22 Rob Currie
   - Changed FitAssembler to add parameters missing in ResultParameter, this also included adding a new function to ResultParameter, added a functions to ParameterSet too for convenience
   - The LLcontour code now correctly writes data to a file and looks to be storing the information required for the plots, however this code is still to be tested completely

2011/02/21 Rob Currie
   - Heavily re-written scanning code within FitAssembler to now use ToyStudyResult
   - 'Co-ordinates' of each fit are 'hard-coded' into each FitResult
   - Added new features within ToyStudyResult
   - Moved code to make backwards compatible LL scan/contour plots to ResultFormatter
   - Added slight improvement to my code in DataSetConfiguration, slight speed improvement again
   - Removed <Type> tag from XML in Output Scan and Scan2D as this concievably serves no purpouse
   - Interface to scan code and to deal with results through main is now very simplified
   - Changed fail on Caching integrals to a throw statement for long scans
   - Can now write results of Contour scans to ntuples  -- IN DEVELOPMENT
     This implementation only spits out values for floated parameters, this is a known issue but allows for plots to be made as code development/testing progresses

2011/02/17  Pete Clarke
   - Added Bs2JpsiPhi_SignalAlt_MO_v1.cpp/h
   - This is the mistag observalble pdf
   - also removed temporary blinding of y axixs scale in 2D plots

2011/02/17 Rob Currie
  - Rewritten the code to read in root files into RapidFit DataSetConfiguration.h
       after giving it near a fortnight of torture under various datasets and fitting I'm uploading it as it offers speed and logic improvements

  - Fixed another gcc 4.4 bug in a pdf, Xcode seems to be on gcc<=4.3 still...

  - large additions to XMLConfigReader to read in new Output <Scan> and <2DScan> tags and children which replace the <LLscan> tags
  - large changes to FitFormatter to make DoScan more generic
  - Added ScanParam class to cope with scan metadata
  - Added a LOT of code to OutputFormatter to return on request ScanParameters and 2D scan pairs. This also requires storing a ResultParameterSet in the class
  - Altered the code in main to run LLscan and LLcontour as requested, further options to these functions have been made redundant due to XML control
  - Added ability to call FitResult objects from a Scan ala commented code in main.cpp

  - Left hooks in FitFormatter for quick+dirty plotting code in RapidFit for scans

  - Added CmakeLists.txt and scripts/FindROOT.cmake which allows RapidFit to be built with cmake which makes building on the existing code much easier imo
  - Added doc/CMAKE-HOWTO.txt for those interested in using this I recommend it as it gets rid of 99%+ of make clean issues

  - Added tinter-static.C file in utils  which is a copy of a plotting tool I use to return pullPlot graphs as used for note2

  - Added initial implementation for throw-catch over single fits within a scan ala Pete's suggestion


2011/02/16 Conor Fitzpatrick
  - Modified the flat ntuple output to also include the likelihood to which the toy minimises. 
  - In the ntuple this is called "NLL". This will allow pete's 2D likelihood profile scans to be split into jobs and sent off to condor

2011/02/13 Pete clarke
  - big commit of a restructing of the xxxx_alt PDF series
  - Initiated new name  Bs2JpsiPhi_SignalAlt.....
  - Factorised common code into Bs2JpsiPhi_SignalAlt_BaseClass
  - New code in Mathematics:: to deal with upper time acceptance
  
2011/02/07 Rob Currie
  - Added the ability to set the Random Seed at runtime using --SetSeed 1234567

2011/02/07 Rob Currie
  - Fixed a bug when trying to call Plotter with a dataset containing 0 events

2011/02/04 Rob Currie
  - Belated Update for earlier changes made to allow the use of <Seed>12345</Seed> tags in XML file under <RapidFit>
  - These changes include XMLConfigReader as appropriate and IPDF.h such that every instance of an IPDF object now has a TRandom3 object seeded after it's initialization
  - AcceptReject/Foam now call the Randomly seeded number generator in IPDF as opposed to seeding their own such that the <Seed> tag is one per toy study (fitting session)
    Multiple Toy Repeats will truely generate randomly unique toys i.e. toy1!=toy2 however toy2 is always the same due to the reproducability of TRandom3
    When this tag is in an XML the output toy study Results are completely Reproducible
    When it is not in an xml file IPDF will be seeded with TRandom3(0) (i.e. uses a seed which is time depenent) as before

2011/02/02 Pete Clarke
  - Commit of modifications to Mathematics and B2JpsiPhi_mistagParameter_alt.cppp to allow for upper PT accecptance

2011/01/29 Pete Clarke
  - Big commit of 
      - New PDFs with Swave and background with triple gaussian
      - removed some old J/PsiPhi PDFs
      - LL countour code
 - Also Conor added an S wave PDF just before this.

2010/12/06 Pete Clarke and Rob Currie
  - Pete added new code to make the Plotter work for doing projections of weighted events
  - Rob added code in DataSetConfiguration to deal with Float_t or Double_t Ntuples

2010/12/04 Pete Clarke
  - Fix added following previous update. The LLscan stuff didnt work after I had moved blinding into PhysicsParameter
    Needed fix to PhysicsParameter, FitAssembled::DoScan and MinuitWrapper. 
 - Also added Blinder.h and Blinder.cpp which i forgot in last commit

2010/12/02 Pete Clarke
 - Added code to perform blinding.  Principally thins just changes the construction of each PhysicsParameter
   to add a blindOffset.  Blinding is spefified in the xml with the <Parameter> tag

2010/11/29 Pete Clarke
 - Added code to perform LLscans.  This meant changes to main.cpp, FitAssempler.cpp, OutputConfiguration.cpp, ResultFormatter.cpp
    and added class LLscan.
 - Also started adding commnd line help with --help

2010/11/25 M Needham
 - Add scripts to roadmap selection or more (ApplySelection), plot the input (PlotRapidVar.C) and a wrapper

2010/11/11 Pete Clarke
 - Modified pdfs/src/Bs2JpsiPhiMassBkg.cpp to catch a patalogical divide by zero when the slope parameter alpha was zero
 - Added mods to IPDF, BasePDF, NormalisedSumPDF, SumPDF, ProdPDF to incliude vector<double> EvaluateComponents(..)

2010/11/11 Greig Cowan
 - Modified Plotter and EdStyle to make plots look a bit better.

2010/11/06 M Needham
 - Bug fix in  AddRapidFitInfo.C

2010/11/05 M Needham
 - Bug fix in  AddRapidFitInfo.C 

2010/11/05 M Needham
 - Add a macro in scripts AddRapidFitInfo.C to append the rapid fit variable to the standard ntuple 

2010/10/28 -  Pete Clarke
 - Added fix in pdfs/src/Bs2JpsiPhiLongLivedBkg_withTimeRes.cpp where it was possible to divide by zero in 1/tauLL

2010/10/28 -  Pete Clarke
 - Added new prompt background pdf with 2 Gaussians :  called Bs2JpsiPhiPromptBkg_withTimeResDouble

2010/06/02 - Greig Cowan 
 - Bug fixes in PerEventAngularAcceptance.

2010/05/31 - Pete Clarke
 - Added Gamma_obs  (from DsPi) as Gaussian constraint

2010/05/05 - Greig Cowan 
 - Added PerEventAngularAcceptance class for performing the mu, K
   particle efficiency calibration from Bu->JpsiK control channel.
   Can be run on a user supplied ntuple (in a particular format!) by 
   specifying the --calculatePerEventAcceptance flag. For experts only.
   I still need to plug the resulting efficiency histograms that come
   from this method into the full JpsiPhi fit for per-event acceptance.

2010/04/19 - Greig Cowan 
 - Fixed Bs2JpsiPhiLongLivedBkg_withTimeRes. Now using analytic integration.
   Had to adjust the Normalisation method parameters.

2010/04/04 - Greig Cowan 
 - Fixed Bs2JpsiPhiLongLivedBkg_withTimeRes. Using numerical integration.

2010/03/29 - Greig Cowan 
 - Fix to the average angular acceptance calculation.
 - Fix to DsPi proper time acceptance.
 - Some changes to support python scripts.

2010/03/09 - Greig Cowan 
 - Added code from Pete for constraining Gamma_L.

2010/03/08 - Greig Cowan 
 - Added random number to TCanvas name to prevent annoying messages about
   deleting canvas when plotting results of simultaneous fits.
 - Added UpdateIntegralCache() to IPDF. This allows us to force the update
   of the internal RapidFitIntegrators caches of NormalisaedSumPDF at 
   each iteration of the minimisation. Previously these were not being 
   updated which resulted in the wrong result when caching was used with
   NormalisedSumPDF. For all other PDFs, UpdateIntegralCache() does
   nothing.

2010/03/07 - Greig Cowan 
 - Fixed bug in the numerical integration caching that only affected
   fits with multiple discrete values of an observable.
 - Changed default compilation to use -O3.

2010/02/25 - Gemma Fardell
 - Changed DsPi PDF to add propertime acceptance parameters as physics parameters.
 - Changed tag in getObservables() to (int) in both DsPi PDFs.

2010/02/24 - Greig Cowan 
 - Merged Ben's branch into the trunk. Includes normalisation caching
   and ability to add in external constraint.
 - Gemma added a new DsPi PDF including analytic propertime acceptance.

2010/02/11 - Greig Cowan 
 - Changed way that angular acceptance terms are calculated in Mathematics

2010/02/09 - Greig Cowan 
 - Added in explicit HESSE step after MIGRAD in MinuitWrapper. We should
   also add in a switch at some point to allow for a HESSE step before
   MIGRAD and a final MINOS step for the asymmetric errors.
 - Changed the default final gradient tolerance to 0.1 and the maximum
   number of steps to 1000.

2010/02/04 - Greig Cowan 
 - Added overall normalisation into angular functions in Mathematics.
 - Open ROOT data file in READ mode, not UPDATE.
 - Fixed normalisation caching for case where double gaussian resolution
   is used in Bs2JpsiPhi PDF.

2010/02/04 - Pete Clarke
 - Modified Bs2JpsiPhi_mistagParameter_alt to increase spedd by factor of 3 !
   This was done by caching all the calls to Exp, ExpSin and ExpCos which had
   been called multiple times per Evaluate() call too calculate the same thing

2010/02/04 - Greig Cowan 
 - Modified the Plotter so that plotted data points are scaled by the
   ratio of the analytic to the numerical integrals. For no angular
   acceptance corrections this makes no difference but it solves the 
   incorrect plotting for the case with angular acceptances.
   
2010/02/02 - Greig Cowan 
 - Put in check in when loading ntuple from root file so that we do
   not use a null pointer in the case where the user has not specified
   the correct ntuple path location on the file.

2010/02/01 - Greig Cowan 
 - Palindrome!
 - Fixed bug in Bs2JpsiPhi_mistagParameter_alt which was incorrectly
   handling average acceptance weights due to wrong order of f4/f5 terms.
   Still need to find out why this PDF gives very slightly different
   numbers compared to canonical PDF for a tagged fit. Untagged fits are
   the same.

2010/01/31 - Greig Cowan 
 - Added ability to apply a cut to an ntuple which is being loaded
   into memory. Use the <CutString> tag inside a <DataSet>.
 - Added Bs2JpsiPhi transversity S-wave terms to Mathematics namespace.
 - Update todo list. 
 
2010/01/29 - Greig Cowan 
 - Fixed reading in of data file. Now does not get stuck in 
   infinite loop if you specify more events than are in the file.
   It now just reads in the maximum amount that are consistent with
   the PhaseSpaceBoundary.

2010/01/29 - Ailsa Sparkes 
 - Created Bd2JPsiKstar PDF. Still testing!

2010/01/26 - Pete Clarke
  - Updated Bs2JPsiPhi_mistagParameter_alt to include a time offset and the 
    six angular acceptance functions.

2010/01/23 - Greig Cowan
  - Added double gaussian time resolution to
    Bs2JpsiPhi_mistagParameter_withTimeRes_withAverageAngAcc PDF.
    Fits to MC09 with flat acceptance look good. Furhter testing
    essential.
  - Modified scripts for generating acceptance surface and calculating
    angular integrals.

2010/01/23 - Pete Clarke
  - Updated Bs2JPsiPhi_mistagParameter_alt to perform time resolution
    with 2 Gaussians.

2010/01/22 - Greig Cowan
  - Added Bs2JpsiPhi_mistagParameter_withTimeRes_withAverageAngAcc PDF.
    Time resolution part still to be implemented but should be easy
    using the functions in the Mathematics namespace. This new PDF uses
    a new structure. First, all physics parameters now have corresponding
    member variables, meaning that getPhysicsParameters just needs to be 
    called once in the SetPhysicsParameters() method. In addition, the 6
    angular functions have been moved to the Mathematics namespace so
    that there is a common place for this information that everyone should
    use. All PDFs should switch to using these functions.
  - Bs2JpsiPhi_mistagParameter_withTimeRes_withAverageAngAcc PDF now
    working with a single gaussian time resolution! Need to now get double
    coded up.

2010/01/20 - Greig Cowan
  - Finished Bs2JpsiPhi_mistagParameter_withTimeRes and corresponding
    helper functions in Mathematics namespace. With time resolution off
    this PDF gives identical result to Bs2JpsiPhi_mistagParameter (which
    knows nothing about time resolution). This means we can remove 
    Bs2JpsiPhi_mistagParameter altogether and if we want to use it again, 
    just set timeRes=0 in Bs2JpsiPhi_mistagParameter_withTimeRes. Still
    need to get ExpCosInt and ExpSinInt to work between arbitrary limits.

2010/01/19 - Greig Cowan
  - IMPORTANT: changed default integration to ANALYTIC when there is
    a difference between the numerical and analytic integrations of a
    PDF. This is needed for the moment to get the angular acceptance
    PDFs to work.
  - Added average angular acceptance Bs2JpsiPhi PDF.
  - Added helper script to save plotting output to file.
  - Added Bs2JpsiPhi_mistagParameter_withTimeRes PDF. Not finished yet.
  - Renamed Bs2JpsiPhi_withTimeRes to Bs2JPsiPhi_mistagObservable_withTimeRes.

2010/01/11 - Greig Cowan
  - Minor bug fixes, AngAcc PDF now compiles, plotting changes.
  - Limited the precision that rapidresults prints out to improve
    readability.

2010/01/03 - Greig Cowan
  - Fixed Makefile so that rapidresults compiles into an executable.

2009/12/22 - Pete Clarke
  - Added Mathematics namespace code to do Exp(), ExpCos(), ExpSin() with or without time res
  - Updated Bs2JPsiPhi_mistag_Parameter_alt to use Mathematics::
  - Updated Bs2DsPi_mistagParameter to use Mathematics::
  - Added Bs2DsPiBkg_withTimeRes

2009/12/22 - Greig Cowan
 - Changed basic DsPi PDF to use integration between tmin and tmax.
 - Added Mathematics namespace to hold common code that is used in PDFs
   such as convolutions of gaussians with trigonometric functions. Empty
   for the moment.

2009/12/18 - Greig Cowan
 - Fixed the trunk by removing references to BenIntegrator and DataFileLoader.

2009/12/17 - Ben Wynne
 - Added ability to combine multiple data sources
 - Added sWeight precalculator for background subtraction
 - Moved DataFileLoader code into new class that creates DataSets - 
   DataSetConfiguration

2009/12/16 - Greig Cowan
 - Modified RootFileLoader class so that it creates dataset with
   number of events specified. Previously was just reading through the
   number of events but this is not sufficient if some events are
   thrown away due to being outside of the PSB.

2009/12/15 - Greig Cowan
 - Refactored all PDFs to more regular naming convention. Updated 
   config files as well. Fixed bug in Bs2JpsiPhi_mistagObservable
   PDF where a tmax was used rather than a tmin.
 - Removed Boost linking from Makefile.

2009/12/10 - Greig Cowan
 - Changed Bs2JpsiPhiNew PDF so that if integration limit tlow < 0 then 
   the Evaluate method returns 0.

2009/12/09 - Greig Cowan
 - Removed angular normalisation constant from the Bs2JpsiPhi background
   PDFs. 
 - Changed Bs2JpsiPhiNew PDF so that if integration limit tlow < 0 then it
   is reset to 0.

2009/12/04 - Ben Wynne
 - A round-up of lots of changes, because I always forget to write in here
   - Fixed the various bugs in the function that loads a text file.
     This included removing all references to the boost library (because it's
     more trouble than it's worth at the moment).
   - Added an <Output> tag to the config file.
     This allows the user to specify whether to do pull plots (and which of
     the formats - my old one or Conor's new one - to use). The user can also
     specify contour plots here, fixing all the hard-coded stuff in Greig's
     code (see 2009/11/26). I've also suppressed the outputting of the contour
     plots as image files, as it seemed unnecessary. Also added handling for
     when contour plots are requested for missing or fixed parameters. The user
     can specify which projections of the function to produce with the Plotter.
   - The XML config reader has been beefed up a lot
     The XML parsing will now catch and report malformed XML errors, rather
     than just segfaulting. The outputting of all free text inside the
     <RapidFit> base tag now works again, allowing config files to include
     helpful comments (as long as they don't contain xml tags). There are now
     objects like OutputConfiguration (similar idea to PDFWithData) that hold
     appropriate configuration data and supply methods that rely on it.
   - There is a general change (suggested by Conor) to a "Fail on any error" model.
     In the event of unexpected input, RapidFit will fail rather than using default behaviour.
   - Fixed the bugs with GaussianConstrained parameter
     The minimum and maximum were being used as such, as well as just a way of defining sigma - fixed
     The NLL calculation was wrong - fixed
     Also added the ability to specify such a parameter in xml with mean and sigma, not value, min and max
   - Changed the structure of FitFunction so that the up value is now returned appropriately for a given sigma value
   - Added method to ResultFormatter so that different format pull outputs can be selected at run time, not compile time
   - Structural change in preparation for sFit background subtraction - FitFunction now has a "Precalculation" method.
   - Looking at producing faster numerical integration: --testRapidIntegrator

2009/12/03 - Greig Cowan
 - Added beta_s validation configuration directory

2009/11/26 - Greig Cowan
 - Added ability to plot 1 and 2 sigma contours from result of 
   a Miniut and Minuit2 fit. For moment, I have hard-coded that
   we plot the contours of parameters 0 and 1 and use 40 data
   points. A ROOT file and a .png are produced.

2009/11/25 - Greig Cowan
 - Fixed LaTeX output. Now replace _ with \_ in parameter names.
 - Added ability to use per-event weights in the NLL calculation.
   Weight is 1.0 by default and can be specified by having an
   Observable with name "eventWeight" defined in the
   PhaseSpaceBoundary. For generation this should be a discrete
   value which will be the same for all events. For reading in 
   from a file, it should have a Minimum of 0.0 and Maximum of 
   1.0 (or whatever you think appropriate).

2009/11/25 - Greig Cowan
 - Added correct normalisation for background mass PDF (Pete).

2009/11/23 - Greig Cowan
 - Removed empty directories from SVN repo.
 - Got first collisions today!!

2009/11/19 - Conor Fitzpatrick
 - Fixed a bug in the sWave PDF, added ganga script to run it

2009/11/16 - Greig Cowan
 - Now pruning the fixed parameters from correlation matrix.

2009/11/16 - Greig Cowan
 - Added feature to exract correlation matrix from Minuit and
   Minuit2 and have it printede to screen in a LaTeX formatted
   table. Still need to prune non-floated parameters.

2009/11/14 - Greig Cowan
 - Altered Plotter to prevent zero-suppressed plots and limited
   display of stats box. Time plots use more points than angles.
   Also tried to get time range altered to go down to t=-1. ROOT
   is not playing nice. Also now using TMultiGraph and
   TGraphErrors so this should make it easier to show signal and
   background components on same plot.

2009/11/13 - Greig Cowan
 - Added Bs2JpsiPhi prompt background PDF with time resolution.
 - Fixed Bs2JpsiPhi long lived background PDF with time resolution.
 - Name of PDF does not have RaPDF_ at the start! Starting to
   migrate all PDFs to this convention.

2009/11/11 - Greig Cowan
 - Verified the Bs2JpsiPhi LL background and tidied up the code.

2009/11/11 - Ben Wynne
 - Implemented interface to Foam event generator. Works a treat!

2009/11/10 - Greig Cowan
 - Restructured code to separate framework and physics PDFs.

2009/11/05 - Greig Cowan
 - Added feature to main.cpp to allow automatic plotting of a
   PDF on a loaded dataset.
 - Propertime resolution for Bs2JpsiPhi now appears to be working
   for the case of using average resolution (i.e., just 
   convolution of a double Gaussian) but fit takes long time.
   Need to check caching. Per-event resolution needs to be 
   validated also.
 - Default sampling of PDF increased to 128 points from 16.

2009/11/03 - Greig Cowan
 - Added BD2JpsiPhi PDF with analytic time resolution. To be 
   checked!!

2009/11/01 - Greig Cowan
 - Implemented RootFileDataSet and Root file -> MemoryDataSet
   loader function. Both give identical results to Ascii file
   method but RootFileDataSet currently about 50% slower. Ntuples
   must have branch names the same as Observable names specified
   in XML.
 - Two helper pyROOT scripts for processing of ntuples to get
   data into a form that can be processed by RapidFit (i.e.,
   have observable names as the branch names in the ntuple).

2009/10/30 - Conor Fitzpatrick
 - Added S-wave PDF, RaPDF_Bs2JpsiPhi_sWave.cpp,.h and config file

2009/10/28 - Greig Cowan
 - Changes made to Fumili minimisation; still not working yet.
 - Updated todo list after group meeting from 27th Oct.

2009/10/27 - Conor Fitzpatrick
 - Added #includes for <stdlib.h> in order to fix atoi problem on a 
   local install

2009/10/22 - Gemma Fardell
 - Implemented Bs2DsPi PDF and added config file. To be checked!!

2009/10/19 - Greig Cowan
 - Updated default plot style and added errors to the histograms
   produced by the Plotter.

2009/10/09 - Greig Cowan
 - Added classes for dealing with Fumili minimisation. Compiles but
   does not work yet.
	
2009/10/08 - Greig Cowan
 - Added config file for fitting to the MC09 EvtGen data. Data
   file also added. Results to this fit are identical to those
   obtained from Heidelberg and Nikhef fitters. See my log.
 - Installed graphviz on Mac and configured new Doxygen config
   file to produce diagrams.

2009/10/07 - Greig Cowan
 - Added python ROOT script for post-processing of results of
   multiple toy studies that have been performed on batch and 
   the outputs merged.
 - Added todo.list. Please update as we go along.
 - Added config files for MC09 and DC06 parameters (~same apart
   from deltaM).

2009/10/06 - Greig Cowan
 - Fixed normalisation factor in angular terms for Bs2JpsiPhi PDF.
 - Added JpsiPhi bkg mass PDF.
 - Added ProdPDF class for creating product of 2 PDFs.
 - Modified main.cpp so that LaTeX results printed by default.
 - Physics parameter values changed to use the same ones as in the 
   Heidelberg note.
 - Added signal mass PDF and updated the background mass PDFs. Still
   need to implement the background ones properly and to check them.
 - Removed compilation of RooFit related classes from Makefile. Still
   in release and in CVS.
 - Added scripts directory and two scripts which allow for toy studies
   to be submitted to Edinburgh Condor through Ganga. Default is to
   submit 10 subjobs and merge the pullPlots.root output. This will
   speed up the ability to run large numbers of toys.

2009/10/05 - Greig Cowan
 - Added placeholders for the prompt Jpsi and long lived background
   PDFs. Still to be chcked.
 - Removed the f_sig and f_prompt physics parameters since we now take
   care of these fractions in the SumPDF class. They are added as 
   parameters of the fit automatically.
 - Added fractional part to LL bkg PDF since we did not want to 
   implement a complex solution for adding two PDFs of the same name.

2009/10/03 - Greig Cowan
 - MAJOR CHANGE: Restructured the project to split up src, headers and
   binary objects. 

2009/10/02 - Greig Cowan
 - MAJOR CHANGE: Added DataPoint to Integral() method of IPDF such that
   we can have normalisation factors that depend on the DataPoint (such
   as the B tag, mistag, ...). PDF writers should consider implementing
   a caching mechanism to ensure that the integral does not have to be 
   explicitly calculated for each event but rather you pick one of the 
   pre-calculated factors depending on the value of the observables.

2009/10/01 - Greig Cowan
 - Added new RaPDF_Bs2JpsiPhi PDF which takes care of normalisation
 - Based heavily on Andres' code from previous 3-angle analysis

2009/08/01 - Greig Cowan
 - Added tagging to the RapidFit Bs2JpsiPhi PDF
 - Added the doc directory and release.notes
